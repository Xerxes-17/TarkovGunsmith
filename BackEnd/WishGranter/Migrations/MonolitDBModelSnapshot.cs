// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WishGranter;

#nullable disable

namespace WishGranter.Migrations
{
    [DbContext(typeof(MonolitDB))]
    partial class MonolitDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("WishGranter.SQL_Ammo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Ammos");
                });

            modelBuilder.Entity("WishGranter.SQL_Armor", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Armors");
                });

            modelBuilder.Entity("WishGranter.SQL_TBS_Result", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AmmoId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ArmorId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Distance")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DurabilityPerc")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Killshot")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AmmoId");

                    b.HasIndex("ArmorId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("WishGranter.SQL_TBS_Shot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("AverageDamage")
                        .HasColumnType("REAL");

                    b.Property<double>("BluntDamage")
                        .HasColumnType("REAL");

                    b.Property<double>("DoneDamage")
                        .HasColumnType("REAL");

                    b.Property<double>("Durability")
                        .HasColumnType("REAL");

                    b.Property<double>("DurabilityPerc")
                        .HasColumnType("REAL");

                    b.Property<double>("PenetratingDamage")
                        .HasColumnType("REAL");

                    b.Property<double>("PenetrationChance")
                        .HasColumnType("REAL");

                    b.Property<double>("ProbabilityOfKillCumulative")
                        .HasColumnType("REAL");

                    b.Property<double>("ProbabilityOfKillSpecific")
                        .HasColumnType("REAL");

                    b.Property<double>("RemainingHitPoints")
                        .HasColumnType("REAL");

                    b.Property<int>("ResultId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShotNum")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ResultId");

                    b.ToTable("Shots");
                });

            modelBuilder.Entity("WishGranterProto.ExtensionMethods.TransmissionArmorTestShot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("AverageDamage")
                        .HasColumnType("REAL");

                    b.Property<double>("BluntDamage")
                        .HasColumnType("REAL");

                    b.Property<double>("DoneDamage")
                        .HasColumnType("REAL");

                    b.Property<double>("Durability")
                        .HasColumnType("REAL");

                    b.Property<double>("DurabilityPerc")
                        .HasColumnType("REAL");

                    b.Property<double>("PenetratingDamage")
                        .HasColumnType("REAL");

                    b.Property<double>("PenetrationChance")
                        .HasColumnType("REAL");

                    b.Property<double>("ProbabilityOfKillCumulative")
                        .HasColumnType("REAL");

                    b.Property<double>("ProbabilityOfKillSpecific")
                        .HasColumnType("REAL");

                    b.Property<double>("RemainingHitPoints")
                        .HasColumnType("REAL");

                    b.Property<int?>("SQL_TBS_ResultId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SQL_TBS_ResultId");

                    b.ToTable("TransmissionArmorTestShot");
                });

            modelBuilder.Entity("WishGranter.SQL_TBS_Result", b =>
                {
                    b.HasOne("WishGranter.SQL_Ammo", "SQL_Ammo")
                        .WithMany()
                        .HasForeignKey("AmmoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WishGranter.SQL_Armor", "SQL_Armor")
                        .WithMany()
                        .HasForeignKey("ArmorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SQL_Ammo");

                    b.Navigation("SQL_Armor");
                });

            modelBuilder.Entity("WishGranter.SQL_TBS_Shot", b =>
                {
                    b.HasOne("WishGranter.SQL_TBS_Result", "SQL_TBS_Result")
                        .WithMany()
                        .HasForeignKey("ResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SQL_TBS_Result");
                });

            modelBuilder.Entity("WishGranterProto.ExtensionMethods.TransmissionArmorTestShot", b =>
                {
                    b.HasOne("WishGranter.SQL_TBS_Result", null)
                        .WithMany("Shots")
                        .HasForeignKey("SQL_TBS_ResultId");
                });

            modelBuilder.Entity("WishGranter.SQL_TBS_Result", b =>
                {
                    b.Navigation("Shots");
                });
#pragma warning restore 612, 618
        }
    }
}
